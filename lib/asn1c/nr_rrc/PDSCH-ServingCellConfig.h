/*
 * Copyright 2020-2021 Telecom Paris
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	`asn1c -gen-PER -fcompound-names -findirect-choice -no-gen-example`
 */

#ifndef	_PDSCH_ServingCellConfig_H_
#define	_PDSCH_ServingCellConfig_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeEnumerated.h"
#include "ServCellIndex.h"
#include "NativeInteger.h"
#include "BOOLEAN.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum PDSCH_ServingCellConfig__xOverhead {
	PDSCH_ServingCellConfig__xOverhead_xOh6	= 0,
	PDSCH_ServingCellConfig__xOverhead_xOh12	= 1,
	PDSCH_ServingCellConfig__xOverhead_xOh18	= 2
} e_PDSCH_ServingCellConfig__xOverhead;
typedef enum PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH {
	PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH_n2	= 0,
	PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH_n4	= 1,
	PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH_n6	= 2,
	PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH_n10	= 3,
	PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH_n12	= 4,
	PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH_n16	= 5
} e_PDSCH_ServingCellConfig__nrofHARQ_ProcessesForPDSCH;

/* Forward declarations */
struct SetupRelease_PDSCH_CodeBlockGroupTransmission;

/* PDSCH-ServingCellConfig */
typedef struct PDSCH_ServingCellConfig {
	struct SetupRelease_PDSCH_CodeBlockGroupTransmission	*codeBlockGroupTransmission;	/* OPTIONAL */
	long	*xOverhead;	/* OPTIONAL */
	long	*nrofHARQ_ProcessesForPDSCH;	/* OPTIONAL */
	ServCellIndex_t	*pucch_Cell;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct PDSCH_ServingCellConfig__ext1 {
		long	*maxMIMO_Layers;	/* OPTIONAL */
		BOOLEAN_t	*processingType2Enabled;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PDSCH_ServingCellConfig_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_xOverhead_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_nrofHARQ_ProcessesForPDSCH_7;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_PDSCH_ServingCellConfig;
extern asn_SEQUENCE_specifics_t asn_SPC_PDSCH_ServingCellConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_PDSCH_ServingCellConfig_1[5];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SetupRelease.h"

#endif	/* _PDSCH_ServingCellConfig_H_ */
#include "asn_internal.h"
