/*
 * Copyright 2020-2021 Telecom Paris
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	`asn1c -gen-PER -fcompound-names -findirect-choice -no-gen-example`
 */

#ifndef	_DummyD_H_
#define	_DummyD_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeEnumerated.h"
#include "NativeInteger.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum DummyD__maxNumberTxPortsPerResource {
	DummyD__maxNumberTxPortsPerResource_p4	= 0,
	DummyD__maxNumberTxPortsPerResource_p8	= 1,
	DummyD__maxNumberTxPortsPerResource_p12	= 2,
	DummyD__maxNumberTxPortsPerResource_p16	= 3,
	DummyD__maxNumberTxPortsPerResource_p24	= 4,
	DummyD__maxNumberTxPortsPerResource_p32	= 5
} e_DummyD__maxNumberTxPortsPerResource;
typedef enum DummyD__amplitudeScalingType {
	DummyD__amplitudeScalingType_wideband	= 0,
	DummyD__amplitudeScalingType_widebandAndSubband	= 1
} e_DummyD__amplitudeScalingType;
typedef enum DummyD__amplitudeSubsetRestriction {
	DummyD__amplitudeSubsetRestriction_supported	= 0
} e_DummyD__amplitudeSubsetRestriction;

/* DummyD */
typedef struct DummyD {
	long	 maxNumberTxPortsPerResource;
	long	 maxNumberResources;
	long	 totalNumberTxPorts;
	long	 parameterLx;
	long	 amplitudeScalingType;
	long	*amplitudeSubsetRestriction;	/* OPTIONAL */
	long	 maxNumberCSI_RS_PerResourceSet;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} DummyD_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberTxPortsPerResource_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_amplitudeScalingType_12;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_amplitudeSubsetRestriction_15;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_DummyD;
extern asn_SEQUENCE_specifics_t asn_SPC_DummyD_specs_1;
extern asn_TYPE_member_t asn_MBR_DummyD_1[7];

#ifdef __cplusplus
}
#endif

#endif	/* _DummyD_H_ */
#include "asn_internal.h"
