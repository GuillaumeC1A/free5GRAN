/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "NR-RRC-Definitions.asn"
 * 	`asn1c -fcompound-names -no-gen-example -pdu=all`
 */

#ifndef	_MIMO_ParametersPerBand_H_
#define	_MIMO_ParametersPerBand_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeEnumerated.h"
#include "NativeInteger.h"
#include "constr_SEQUENCE.h"
#include "asn_SEQUENCE_OF.h"
#include "constr_SEQUENCE_OF.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC {
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC_n4	= 0,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC_n8	= 1,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC_n16	= 2,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC_n32	= 3,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC_n64	= 4,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC_n128	= 5
} e_MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberConfiguredTCIstatesPerCC;
typedef enum MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberActiveTCI_PerBWP {
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberActiveTCI_PerBWP_n1	= 0,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberActiveTCI_PerBWP_n2	= 1,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberActiveTCI_PerBWP_n4	= 2,
	MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberActiveTCI_PerBWP_n8	= 3
} e_MIMO_ParametersPerBand__tci_StatePDSCH__maxNumberActiveTCI_PerBWP;
typedef enum MIMO_ParametersPerBand__additionalActiveTCI_StatePDCCH {
	MIMO_ParametersPerBand__additionalActiveTCI_StatePDCCH_supported	= 0
} e_MIMO_ParametersPerBand__additionalActiveTCI_StatePDCCH;
typedef enum MIMO_ParametersPerBand__pusch_TransCoherence {
	MIMO_ParametersPerBand__pusch_TransCoherence_nonCoherent	= 0,
	MIMO_ParametersPerBand__pusch_TransCoherence_partialCoherent	= 1,
	MIMO_ParametersPerBand__pusch_TransCoherence_fullCoherent	= 2
} e_MIMO_ParametersPerBand__pusch_TransCoherence;
typedef enum MIMO_ParametersPerBand__beamCorrespondenceWithoutUL_BeamSweeping {
	MIMO_ParametersPerBand__beamCorrespondenceWithoutUL_BeamSweeping_supported	= 0
} e_MIMO_ParametersPerBand__beamCorrespondenceWithoutUL_BeamSweeping;
typedef enum MIMO_ParametersPerBand__periodicBeamReport {
	MIMO_ParametersPerBand__periodicBeamReport_supported	= 0
} e_MIMO_ParametersPerBand__periodicBeamReport;
typedef enum MIMO_ParametersPerBand__aperiodicBeamReport {
	MIMO_ParametersPerBand__aperiodicBeamReport_supported	= 0
} e_MIMO_ParametersPerBand__aperiodicBeamReport;
typedef enum MIMO_ParametersPerBand__sp_BeamReportPUCCH {
	MIMO_ParametersPerBand__sp_BeamReportPUCCH_supported	= 0
} e_MIMO_ParametersPerBand__sp_BeamReportPUCCH;
typedef enum MIMO_ParametersPerBand__sp_BeamReportPUSCH {
	MIMO_ParametersPerBand__sp_BeamReportPUSCH_supported	= 0
} e_MIMO_ParametersPerBand__sp_BeamReportPUSCH;
typedef enum MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_15kHz {
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_15kHz_n4	= 0,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_15kHz_n7	= 1,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_15kHz_n14	= 2
} e_MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_15kHz;
typedef enum MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_30kHz {
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_30kHz_n4	= 0,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_30kHz_n7	= 1,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_30kHz_n14	= 2
} e_MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_30kHz;
typedef enum MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_60kHz {
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_60kHz_n4	= 0,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_60kHz_n7	= 1,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_60kHz_n14	= 2
} e_MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_60kHz;
typedef enum MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_120kHz {
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_120kHz_n4	= 0,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_120kHz_n7	= 1,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_120kHz_n14	= 2
} e_MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_120kHz;
typedef enum MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_240kHz {
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_240kHz_n4	= 0,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_240kHz_n7	= 1,
	MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_240kHz_n14	= 2
} e_MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL__scs_240kHz;
typedef enum MIMO_ParametersPerBand__maxNumberNonGroupBeamReporting {
	MIMO_ParametersPerBand__maxNumberNonGroupBeamReporting_n1	= 0,
	MIMO_ParametersPerBand__maxNumberNonGroupBeamReporting_n2	= 1,
	MIMO_ParametersPerBand__maxNumberNonGroupBeamReporting_n4	= 2
} e_MIMO_ParametersPerBand__maxNumberNonGroupBeamReporting;
typedef enum MIMO_ParametersPerBand__groupBeamReporting {
	MIMO_ParametersPerBand__groupBeamReporting_supported	= 0
} e_MIMO_ParametersPerBand__groupBeamReporting;
typedef enum MIMO_ParametersPerBand__uplinkBeamManagement__maxNumberSRS_ResourcePerSet_BM {
	MIMO_ParametersPerBand__uplinkBeamManagement__maxNumberSRS_ResourcePerSet_BM_n2	= 0,
	MIMO_ParametersPerBand__uplinkBeamManagement__maxNumberSRS_ResourcePerSet_BM_n4	= 1,
	MIMO_ParametersPerBand__uplinkBeamManagement__maxNumberSRS_ResourcePerSet_BM_n8	= 2,
	MIMO_ParametersPerBand__uplinkBeamManagement__maxNumberSRS_ResourcePerSet_BM_n16	= 3
} e_MIMO_ParametersPerBand__uplinkBeamManagement__maxNumberSRS_ResourcePerSet_BM;
typedef enum MIMO_ParametersPerBand__dummy2 {
	MIMO_ParametersPerBand__dummy2_supported	= 0
} e_MIMO_ParametersPerBand__dummy2;
typedef enum MIMO_ParametersPerBand__twoPortsPTRS_UL {
	MIMO_ParametersPerBand__twoPortsPTRS_UL_supported	= 0
} e_MIMO_ParametersPerBand__twoPortsPTRS_UL;
typedef enum MIMO_ParametersPerBand__beamReportTiming__scs_15kHz {
	MIMO_ParametersPerBand__beamReportTiming__scs_15kHz_sym2	= 0,
	MIMO_ParametersPerBand__beamReportTiming__scs_15kHz_sym4	= 1,
	MIMO_ParametersPerBand__beamReportTiming__scs_15kHz_sym8	= 2
} e_MIMO_ParametersPerBand__beamReportTiming__scs_15kHz;
typedef enum MIMO_ParametersPerBand__beamReportTiming__scs_30kHz {
	MIMO_ParametersPerBand__beamReportTiming__scs_30kHz_sym4	= 0,
	MIMO_ParametersPerBand__beamReportTiming__scs_30kHz_sym8	= 1,
	MIMO_ParametersPerBand__beamReportTiming__scs_30kHz_sym14	= 2,
	MIMO_ParametersPerBand__beamReportTiming__scs_30kHz_sym28	= 3
} e_MIMO_ParametersPerBand__beamReportTiming__scs_30kHz;
typedef enum MIMO_ParametersPerBand__beamReportTiming__scs_60kHz {
	MIMO_ParametersPerBand__beamReportTiming__scs_60kHz_sym8	= 0,
	MIMO_ParametersPerBand__beamReportTiming__scs_60kHz_sym14	= 1,
	MIMO_ParametersPerBand__beamReportTiming__scs_60kHz_sym28	= 2
} e_MIMO_ParametersPerBand__beamReportTiming__scs_60kHz;
typedef enum MIMO_ParametersPerBand__beamReportTiming__scs_120kHz {
	MIMO_ParametersPerBand__beamReportTiming__scs_120kHz_sym14	= 0,
	MIMO_ParametersPerBand__beamReportTiming__scs_120kHz_sym28	= 1,
	MIMO_ParametersPerBand__beamReportTiming__scs_120kHz_sym56	= 2
} e_MIMO_ParametersPerBand__beamReportTiming__scs_120kHz;
typedef enum MIMO_ParametersPerBand__aperiodicTRS {
	MIMO_ParametersPerBand__aperiodicTRS_supported	= 0
} e_MIMO_ParametersPerBand__aperiodicTRS;
typedef enum MIMO_ParametersPerBand__dummy6 {
	MIMO_ParametersPerBand__dummy6_true	= 0
} e_MIMO_ParametersPerBand__dummy6;
typedef enum MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz {
	MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz_sym14	= 0,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz_sym28	= 1,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz_sym48	= 2,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz_sym224	= 3,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz_sym336	= 4
} e_MIMO_ParametersPerBand__beamSwitchTiming__scs_60kHz;
typedef enum MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz {
	MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz_sym14	= 0,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz_sym28	= 1,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz_sym48	= 2,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz_sym224	= 3,
	MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz_sym336	= 4
} e_MIMO_ParametersPerBand__beamSwitchTiming__scs_120kHz;
typedef enum MIMO_ParametersPerBand__defaultQCL_TwoTCI_r16 {
	MIMO_ParametersPerBand__defaultQCL_TwoTCI_r16_supported	= 0
} e_MIMO_ParametersPerBand__defaultQCL_TwoTCI_r16;
typedef enum MIMO_ParametersPerBand__simul_SpatialRelationUpdatePUCCHResGroup_r16 {
	MIMO_ParametersPerBand__simul_SpatialRelationUpdatePUCCHResGroup_r16_supported	= 0
} e_MIMO_ParametersPerBand__simul_SpatialRelationUpdatePUCCHResGroup_r16;
typedef enum MIMO_ParametersPerBand__maxNumberSCellBFR_r16 {
	MIMO_ParametersPerBand__maxNumberSCellBFR_r16_n1	= 0,
	MIMO_ParametersPerBand__maxNumberSCellBFR_r16_n2	= 1,
	MIMO_ParametersPerBand__maxNumberSCellBFR_r16_n4	= 2,
	MIMO_ParametersPerBand__maxNumberSCellBFR_r16_n8	= 3
} e_MIMO_ParametersPerBand__maxNumberSCellBFR_r16;
typedef enum MIMO_ParametersPerBand__simultaneousReceptionDiffTypeD_r16 {
	MIMO_ParametersPerBand__simultaneousReceptionDiffTypeD_r16_supported	= 0
} e_MIMO_ParametersPerBand__simultaneousReceptionDiffTypeD_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_OneTx_CMR_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_OneTx_CMR_r16_n8	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_OneTx_CMR_r16_n16	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_OneTx_CMR_r16_n32	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_OneTx_CMR_r16_n64	= 3
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_OneTx_CMR_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_r16_n8	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_r16_n16	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_r16_n32	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_r16_n64	= 3
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16_n0	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16_n4	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16_n8	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16_n16	= 3,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16_n32	= 4,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16_n64	= 5
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSIRS_2Tx_res_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16_n8	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16_n16	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16_n32	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16_n64	= 3,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16_n128	= 4
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberSSB_CSIRS_res_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16_n8	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16_n16	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16_n32	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16_n64	= 3,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16_n128	= 4
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberCSI_IM_NZP_IMR_res_mem_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedCSI_RS_Density_CMR_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedCSI_RS_Density_CMR_r16_one	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedCSI_RS_Density_CMR_r16_three	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedCSI_RS_Density_CMR_r16_oneAndThree	= 2
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedCSI_RS_Density_CMR_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16_n2	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16_n4	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16_n8	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16_n16	= 3,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16_n32	= 4,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16_n64	= 5
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__maxNumberAperiodicCSI_RS_Res_r16;
typedef enum MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedSNIR_meas_r16 {
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedSNIR_meas_r16_ssbWithCSI_IM	= 0,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedSNIR_meas_r16_ssbWithNZP_IMR	= 1,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedSNIR_meas_r16_csirsWithNZP_IMR	= 2,
	MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedSNIR_meas_r16_csi_RSWithoutIMR	= 3
} e_MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16__supportedSNIR_meas_r16;
typedef enum MIMO_ParametersPerBand__nonGroupSINR_reporting_r16 {
	MIMO_ParametersPerBand__nonGroupSINR_reporting_r16_n1	= 0,
	MIMO_ParametersPerBand__nonGroupSINR_reporting_r16_n2	= 1,
	MIMO_ParametersPerBand__nonGroupSINR_reporting_r16_n4	= 2
} e_MIMO_ParametersPerBand__nonGroupSINR_reporting_r16;
typedef enum MIMO_ParametersPerBand__groupSINR_reporting_r16 {
	MIMO_ParametersPerBand__groupSINR_reporting_r16_supported	= 0
} e_MIMO_ParametersPerBand__groupSINR_reporting_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__overlapPDSCHsInTimePartiallyFreq_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__overlapPDSCHsInTimePartiallyFreq_r16_supported	= 0
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__overlapPDSCHsInTimePartiallyFreq_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16__supportPDCCH_ToPDSCH_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16__supportPDCCH_ToPDSCH_r16_supported	= 0
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16__supportPDCCH_ToPDSCH_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16__supportPDSCH_ToHARQ_ACK_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16__supportPDSCH_ToHARQ_ACK_r16_supported	= 0
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16__supportPDSCH_ToHARQ_ACK_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationUL_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationUL_r16_supported	= 0
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationUL_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__separateCRS_RateMatching_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__separateCRS_RateMatching_r16_supported	= 0
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__separateCRS_RateMatching_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__defaultQCL_PerCORESETPoolIndex_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__defaultQCL_PerCORESETPoolIndex_r16_supported	= 0
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__defaultQCL_PerCORESETPoolIndex_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxNumberPerCORESET_Pool_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxNumberPerCORESET_Pool_r16_n1	= 0,
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxNumberPerCORESET_Pool_r16_n2	= 1,
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxNumberPerCORESET_Pool_r16_n4	= 2,
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxNumberPerCORESET_Pool_r16_n8	= 3
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxNumberPerCORESET_Pool_r16;
typedef enum MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxTotalNumberAcrossCORESET_Pool_r16 {
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxTotalNumberAcrossCORESET_Pool_r16_n2	= 0,
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxTotalNumberAcrossCORESET_Pool_r16_n4	= 1,
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxTotalNumberAcrossCORESET_Pool_r16_n8	= 2,
	MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxTotalNumberAcrossCORESET_Pool_r16_n16	= 3
} e_MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16__maxTotalNumberAcrossCORESET_Pool_r16;
typedef enum MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportNewDMRS_Port_r16 {
	MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportNewDMRS_Port_r16_n0	= 0,
	MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportNewDMRS_Port_r16_n2	= 1,
	MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportNewDMRS_Port_r16_n3	= 2
} e_MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportNewDMRS_Port_r16;
typedef enum MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportTwoPortDL_PTRS_r16 {
	MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportTwoPortDL_PTRS_r16_supported	= 0
} e_MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16__supportTwoPortDL_PTRS_r16;
typedef enum MIMO_ParametersPerBand__supportFDM_SchemeA_r16 {
	MIMO_ParametersPerBand__supportFDM_SchemeA_r16_supported	= 0
} e_MIMO_ParametersPerBand__supportFDM_SchemeA_r16;
typedef enum MIMO_ParametersPerBand__supportCodeWordSoftCombining_r16 {
	MIMO_ParametersPerBand__supportCodeWordSoftCombining_r16_supported	= 0
} e_MIMO_ParametersPerBand__supportCodeWordSoftCombining_r16;
typedef enum MIMO_ParametersPerBand__supportTDM_SchemeA_r16 {
	MIMO_ParametersPerBand__supportTDM_SchemeA_r16_kb3	= 0,
	MIMO_ParametersPerBand__supportTDM_SchemeA_r16_kb5	= 1,
	MIMO_ParametersPerBand__supportTDM_SchemeA_r16_kb10	= 2,
	MIMO_ParametersPerBand__supportTDM_SchemeA_r16_kb20	= 3,
	MIMO_ParametersPerBand__supportTDM_SchemeA_r16_noRestriction	= 4
} e_MIMO_ParametersPerBand__supportTDM_SchemeA_r16;
typedef enum MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16 {
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n2	= 0,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n3	= 1,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n4	= 2,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n5	= 3,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n6	= 4,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n7	= 5,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n8	= 6,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16_n16	= 7
} e_MIMO_ParametersPerBand__supportInter_slotTDM_r16__supportRepNumPDSCH_TDRA_r16;
typedef enum MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16 {
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16_kb3	= 0,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16_kb5	= 1,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16_kb10	= 2,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16_kb20	= 3,
	MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16_noRestriction	= 4
} e_MIMO_ParametersPerBand__supportInter_slotTDM_r16__maxTBS_Size_r16;
typedef enum MIMO_ParametersPerBand__lowPAPR_DMRS_PDSCH_r16 {
	MIMO_ParametersPerBand__lowPAPR_DMRS_PDSCH_r16_supported	= 0
} e_MIMO_ParametersPerBand__lowPAPR_DMRS_PDSCH_r16;
typedef enum MIMO_ParametersPerBand__lowPAPR_DMRS_PUSCHwithoutPrecoding_r16 {
	MIMO_ParametersPerBand__lowPAPR_DMRS_PUSCHwithoutPrecoding_r16_supported	= 0
} e_MIMO_ParametersPerBand__lowPAPR_DMRS_PUSCHwithoutPrecoding_r16;
typedef enum MIMO_ParametersPerBand__lowPAPR_DMRS_PUCCH_r16 {
	MIMO_ParametersPerBand__lowPAPR_DMRS_PUCCH_r16_supported	= 0
} e_MIMO_ParametersPerBand__lowPAPR_DMRS_PUCCH_r16;
typedef enum MIMO_ParametersPerBand__lowPAPR_DMRS_PUSCHwithPrecoding_r16 {
	MIMO_ParametersPerBand__lowPAPR_DMRS_PUSCHwithPrecoding_r16_supported	= 0
} e_MIMO_ParametersPerBand__lowPAPR_DMRS_PUSCHwithPrecoding_r16;
typedef enum MIMO_ParametersPerBand__beamCorrespondenceSSB_based_r16 {
	MIMO_ParametersPerBand__beamCorrespondenceSSB_based_r16_supported	= 0
} e_MIMO_ParametersPerBand__beamCorrespondenceSSB_based_r16;
typedef enum MIMO_ParametersPerBand__beamCorrespondenceCSI_RS_based_r16 {
	MIMO_ParametersPerBand__beamCorrespondenceCSI_RS_based_r16_supported	= 0
} e_MIMO_ParametersPerBand__beamCorrespondenceCSI_RS_based_r16;
typedef enum MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_60kHz_r16 {
	MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_60kHz_r16_sym224	= 0,
	MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_60kHz_r16_sym336	= 1
} e_MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_60kHz_r16;
typedef enum MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_120kHz_r16 {
	MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_120kHz_r16_sym224	= 0,
	MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_120kHz_r16_sym336	= 1
} e_MIMO_ParametersPerBand__beamSwitchTiming_r16__scs_120kHz_r16;

/* Forward declarations */
struct DummyG;
struct SRS_Resources;
struct DummyH;
struct BeamManagementSSB_CSI_RS;
struct CodebookParameters;
struct CSI_RS_IM_ReceptionForFeedback;
struct CSI_RS_ProcFrameworkForSRS;
struct CSI_ReportFramework;
struct CSI_RS_ForTracking;
struct SpatialRelations;
struct CodebookParameters_v1610;
struct CSI_ReportFrameworkExt_r16;
struct CodebookParametersAddition_r16;
struct CodebookComboParametersAddition_r16;
struct PTRS_DensityRecommendationDL;
struct PTRS_DensityRecommendationUL;
struct SupportedCSI_RS_Resource;

/* MIMO-ParametersPerBand */
typedef struct MIMO_ParametersPerBand {
	struct MIMO_ParametersPerBand__tci_StatePDSCH {
		long	*maxNumberConfiguredTCIstatesPerCC	/* OPTIONAL */;
		long	*maxNumberActiveTCI_PerBWP	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *tci_StatePDSCH;
	long	*additionalActiveTCI_StatePDCCH	/* OPTIONAL */;
	long	*pusch_TransCoherence	/* OPTIONAL */;
	long	*beamCorrespondenceWithoutUL_BeamSweeping	/* OPTIONAL */;
	long	*periodicBeamReport	/* OPTIONAL */;
	long	*aperiodicBeamReport	/* OPTIONAL */;
	long	*sp_BeamReportPUCCH	/* OPTIONAL */;
	long	*sp_BeamReportPUSCH	/* OPTIONAL */;
	struct DummyG	*dummy1	/* OPTIONAL */;
	long	*maxNumberRxBeam	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__maxNumberRxTxBeamSwitchDL {
		long	*scs_15kHz	/* OPTIONAL */;
		long	*scs_30kHz	/* OPTIONAL */;
		long	*scs_60kHz	/* OPTIONAL */;
		long	*scs_120kHz	/* OPTIONAL */;
		long	*scs_240kHz	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *maxNumberRxTxBeamSwitchDL;
	long	*maxNumberNonGroupBeamReporting	/* OPTIONAL */;
	long	*groupBeamReporting	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__uplinkBeamManagement {
		long	 maxNumberSRS_ResourcePerSet_BM;
		long	 maxNumberSRS_ResourceSet;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *uplinkBeamManagement;
	long	*maxNumberCSI_RS_BFD	/* OPTIONAL */;
	long	*maxNumberSSB_BFD	/* OPTIONAL */;
	long	*maxNumberCSI_RS_SSB_CBD	/* OPTIONAL */;
	long	*dummy2	/* OPTIONAL */;
	long	*twoPortsPTRS_UL	/* OPTIONAL */;
	struct SRS_Resources	*dummy5	/* OPTIONAL */;
	long	*dummy3	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__beamReportTiming {
		long	*scs_15kHz	/* OPTIONAL */;
		long	*scs_30kHz	/* OPTIONAL */;
		long	*scs_60kHz	/* OPTIONAL */;
		long	*scs_120kHz	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *beamReportTiming;
	struct MIMO_ParametersPerBand__ptrs_DensityRecommendationSetDL {
		struct PTRS_DensityRecommendationDL	*scs_15kHz	/* OPTIONAL */;
		struct PTRS_DensityRecommendationDL	*scs_30kHz	/* OPTIONAL */;
		struct PTRS_DensityRecommendationDL	*scs_60kHz	/* OPTIONAL */;
		struct PTRS_DensityRecommendationDL	*scs_120kHz	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ptrs_DensityRecommendationSetDL;
	struct MIMO_ParametersPerBand__ptrs_DensityRecommendationSetUL {
		struct PTRS_DensityRecommendationUL	*scs_15kHz	/* OPTIONAL */;
		struct PTRS_DensityRecommendationUL	*scs_30kHz	/* OPTIONAL */;
		struct PTRS_DensityRecommendationUL	*scs_60kHz	/* OPTIONAL */;
		struct PTRS_DensityRecommendationUL	*scs_120kHz	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ptrs_DensityRecommendationSetUL;
	struct DummyH	*dummy4	/* OPTIONAL */;
	long	*aperiodicTRS	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	long	*dummy6	/* OPTIONAL */;
	struct BeamManagementSSB_CSI_RS	*beamManagementSSB_CSI_RS	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__beamSwitchTiming {
		long	*scs_60kHz	/* OPTIONAL */;
		long	*scs_120kHz	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *beamSwitchTiming;
	struct CodebookParameters	*codebookParameters	/* OPTIONAL */;
	struct CSI_RS_IM_ReceptionForFeedback	*csi_RS_IM_ReceptionForFeedback	/* OPTIONAL */;
	struct CSI_RS_ProcFrameworkForSRS	*csi_RS_ProcFrameworkForSRS	/* OPTIONAL */;
	struct CSI_ReportFramework	*csi_ReportFramework	/* OPTIONAL */;
	struct CSI_RS_ForTracking	*csi_RS_ForTracking	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__srs_AssocCSI_RS {
		A_SEQUENCE_OF(struct SupportedCSI_RS_Resource) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *srs_AssocCSI_RS;
	struct SpatialRelations	*spatialRelations	/* OPTIONAL */;
	long	*defaultQCL_TwoTCI_r16	/* OPTIONAL */;
	struct CodebookParameters_v1610	*codebookParametersPerBand_r16	/* OPTIONAL */;
	long	*simul_SpatialRelationUpdatePUCCHResGroup_r16	/* OPTIONAL */;
	long	*maxNumberSCellBFR_r16	/* OPTIONAL */;
	long	*simultaneousReceptionDiffTypeD_r16	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__ssb_csirs_SINR_measurement_r16 {
		long	 maxNumberSSB_CSIRS_OneTx_CMR_r16;
		long	 maxNumberCSI_IM_NZP_IMR_res_r16;
		long	 maxNumberCSIRS_2Tx_res_r16;
		long	 maxNumberSSB_CSIRS_res_r16;
		long	 maxNumberCSI_IM_NZP_IMR_res_mem_r16;
		long	 supportedCSI_RS_Density_CMR_r16;
		long	 maxNumberAperiodicCSI_RS_Res_r16;
		long	*supportedSNIR_meas_r16	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ssb_csirs_SINR_measurement_r16;
	long	*nonGroupSINR_reporting_r16	/* OPTIONAL */;
	long	*groupSINR_reporting_r16	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16 {
		long	*overlapPDSCHsFullyFreqTime_r16	/* OPTIONAL */;
		long	*overlapPDSCHsInTimePartiallyFreq_r16	/* OPTIONAL */;
		struct MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__outOfOrderOperationDL_r16 {
			long	*supportPDCCH_ToPDSCH_r16	/* OPTIONAL */;
			long	*supportPDSCH_ToHARQ_ACK_r16	/* OPTIONAL */;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *outOfOrderOperationDL_r16;
		long	*outOfOrderOperationUL_r16	/* OPTIONAL */;
		long	*separateCRS_RateMatching_r16	/* OPTIONAL */;
		long	*defaultQCL_PerCORESETPoolIndex_r16	/* OPTIONAL */;
		struct MIMO_ParametersPerBand__multiDCI_multiTRP_Parameters_r16__maxNumberActivatedTCI_States_r16 {
			long	 maxNumberPerCORESET_Pool_r16;
			long	 maxTotalNumberAcrossCORESET_Pool_r16;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *maxNumberActivatedTCI_States_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *multiDCI_multiTRP_Parameters_r16;
	struct MIMO_ParametersPerBand__singleDCI_SDM_scheme_Parameters_r16 {
		long	*supportNewDMRS_Port_r16	/* OPTIONAL */;
		long	*supportTwoPortDL_PTRS_r16	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *singleDCI_SDM_scheme_Parameters_r16;
	long	*supportFDM_SchemeA_r16	/* OPTIONAL */;
	long	*supportCodeWordSoftCombining_r16	/* OPTIONAL */;
	long	*supportTDM_SchemeA_r16	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__supportInter_slotTDM_r16 {
		long	 supportRepNumPDSCH_TDRA_r16;
		long	 maxTBS_Size_r16;
		long	 maxNumberTCI_states_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *supportInter_slotTDM_r16;
	long	*lowPAPR_DMRS_PDSCH_r16	/* OPTIONAL */;
	long	*lowPAPR_DMRS_PUSCHwithoutPrecoding_r16	/* OPTIONAL */;
	long	*lowPAPR_DMRS_PUCCH_r16	/* OPTIONAL */;
	long	*lowPAPR_DMRS_PUSCHwithPrecoding_r16	/* OPTIONAL */;
	struct CSI_ReportFrameworkExt_r16	*csi_ReportFrameworkExt_r16	/* OPTIONAL */;
	struct CodebookParametersAddition_r16	*codebookParametersAddition_r16	/* OPTIONAL */;
	struct CodebookComboParametersAddition_r16	*codebookComboParametersAddition_r16	/* OPTIONAL */;
	long	*beamCorrespondenceSSB_based_r16	/* OPTIONAL */;
	long	*beamCorrespondenceCSI_RS_based_r16	/* OPTIONAL */;
	struct MIMO_ParametersPerBand__beamSwitchTiming_r16 {
		long	*scs_60kHz_r16	/* OPTIONAL */;
		long	*scs_120kHz_r16	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *beamSwitchTiming_r16;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MIMO_ParametersPerBand_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberConfiguredTCIstatesPerCC_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberActiveTCI_PerBWP_10;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_additionalActiveTCI_StatePDCCH_15;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pusch_TransCoherence_17;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_beamCorrespondenceWithoutUL_BeamSweeping_21;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_periodicBeamReport_23;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_aperiodicBeamReport_25;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_sp_BeamReportPUCCH_27;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_sp_BeamReportPUSCH_29;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_15kHz_34;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_30kHz_38;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_42;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_46;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_240kHz_50;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberNonGroupBeamReporting_54;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_groupBeamReporting_58;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberSRS_ResourcePerSet_BM_61;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_dummy2_70;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_twoPortsPTRS_UL_72;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_15kHz_77;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_30kHz_81;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_86;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_90;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_aperiodicTRS_105;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_dummy6_108;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_112;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_118;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_defaultQCL_TwoTCI_r16_132;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simul_SpatialRelationUpdatePUCCHResGroup_r16_135;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberSCellBFR_r16_137;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simultaneousReceptionDiffTypeD_r16_142;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberSSB_CSIRS_OneTx_CMR_r16_145;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberCSI_IM_NZP_IMR_res_r16_150;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberCSIRS_2Tx_res_r16_155;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberSSB_CSIRS_res_r16_162;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberCSI_IM_NZP_IMR_res_mem_r16_168;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportedCSI_RS_Density_CMR_r16_174;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberAperiodicCSI_RS_Res_r16_178;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportedSNIR_meas_r16_185;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_nonGroupSINR_reporting_r16_190;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_groupSINR_reporting_r16_194;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_overlapPDSCHsInTimePartiallyFreq_r16_198;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportPDCCH_ToPDSCH_r16_201;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportPDSCH_ToHARQ_ACK_r16_203;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_outOfOrderOperationUL_r16_205;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_separateCRS_RateMatching_r16_207;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_defaultQCL_PerCORESETPoolIndex_r16_209;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberPerCORESET_Pool_r16_212;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxTotalNumberAcrossCORESET_Pool_r16_217;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportNewDMRS_Port_r16_223;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportTwoPortDL_PTRS_r16_227;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportFDM_SchemeA_r16_229;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportCodeWordSoftCombining_r16_231;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportTDM_SchemeA_r16_233;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_supportRepNumPDSCH_TDRA_r16_240;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxTBS_Size_r16_249;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_lowPAPR_DMRS_PDSCH_r16_256;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_lowPAPR_DMRS_PUSCHwithoutPrecoding_r16_258;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_lowPAPR_DMRS_PUCCH_r16_260;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_lowPAPR_DMRS_PUSCHwithPrecoding_r16_262;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_beamCorrespondenceSSB_based_r16_267;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_beamCorrespondenceCSI_RS_based_r16_269;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_r16_272;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_r16_275;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MIMO_ParametersPerBand;
extern asn_SEQUENCE_specifics_t asn_SPC_MIMO_ParametersPerBand_specs_1;
extern asn_TYPE_member_t asn_MBR_MIMO_ParametersPerBand_1[60];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "DummyG.h"
#include "SRS-Resources.h"
#include "DummyH.h"
#include "BeamManagementSSB-CSI-RS.h"
#include "CodebookParameters.h"
#include "CSI-RS-IM-ReceptionForFeedback.h"
#include "CSI-RS-ProcFrameworkForSRS.h"
#include "CSI-ReportFramework.h"
#include "CSI-RS-ForTracking.h"
#include "SpatialRelations.h"
#include "CodebookParameters-v1610.h"
#include "CSI-ReportFrameworkExt-r16.h"
#include "CodebookParametersAddition-r16.h"
#include "CodebookComboParametersAddition-r16.h"
#include "PTRS-DensityRecommendationDL.h"
#include "PTRS-DensityRecommendationUL.h"
#include "SupportedCSI-RS-Resource.h"

#endif	/* _MIMO_ParametersPerBand_H_ */
#include "asn_internal.h"
