/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "NR-RRC-Definitions.asn"
 * 	`asn1c -fcompound-names -no-gen-example -pdu=all`
 */

#ifndef	_MeasAndMobParametersXDD_Diff_H_
#define	_MeasAndMobParametersXDD_Diff_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeEnumerated.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasAndMobParametersXDD_Diff__intraAndInterF_MeasAndReport {
	MeasAndMobParametersXDD_Diff__intraAndInterF_MeasAndReport_supported	= 0
} e_MeasAndMobParametersXDD_Diff__intraAndInterF_MeasAndReport;
typedef enum MeasAndMobParametersXDD_Diff__eventA_MeasAndReport {
	MeasAndMobParametersXDD_Diff__eventA_MeasAndReport_supported	= 0
} e_MeasAndMobParametersXDD_Diff__eventA_MeasAndReport;
typedef enum MeasAndMobParametersXDD_Diff__handoverInterF {
	MeasAndMobParametersXDD_Diff__handoverInterF_supported	= 0
} e_MeasAndMobParametersXDD_Diff__handoverInterF;
typedef enum MeasAndMobParametersXDD_Diff__handoverLTE_EPC {
	MeasAndMobParametersXDD_Diff__handoverLTE_EPC_supported	= 0
} e_MeasAndMobParametersXDD_Diff__handoverLTE_EPC;
typedef enum MeasAndMobParametersXDD_Diff__handoverLTE_5GC {
	MeasAndMobParametersXDD_Diff__handoverLTE_5GC_supported	= 0
} e_MeasAndMobParametersXDD_Diff__handoverLTE_5GC;
typedef enum MeasAndMobParametersXDD_Diff__sftd_MeasNR_Neigh {
	MeasAndMobParametersXDD_Diff__sftd_MeasNR_Neigh_supported	= 0
} e_MeasAndMobParametersXDD_Diff__sftd_MeasNR_Neigh;
typedef enum MeasAndMobParametersXDD_Diff__sftd_MeasNR_Neigh_DRX {
	MeasAndMobParametersXDD_Diff__sftd_MeasNR_Neigh_DRX_supported	= 0
} e_MeasAndMobParametersXDD_Diff__sftd_MeasNR_Neigh_DRX;
typedef enum MeasAndMobParametersXDD_Diff__handoverUTRA_FDD_r16 {
	MeasAndMobParametersXDD_Diff__handoverUTRA_FDD_r16_supported	= 0
} e_MeasAndMobParametersXDD_Diff__handoverUTRA_FDD_r16;

/* MeasAndMobParametersXDD-Diff */
typedef struct MeasAndMobParametersXDD_Diff {
	long	*intraAndInterF_MeasAndReport	/* OPTIONAL */;
	long	*eventA_MeasAndReport	/* OPTIONAL */;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	long	*handoverInterF	/* OPTIONAL */;
	long	*handoverLTE_EPC	/* OPTIONAL */;
	long	*handoverLTE_5GC	/* OPTIONAL */;
	long	*sftd_MeasNR_Neigh	/* OPTIONAL */;
	long	*sftd_MeasNR_Neigh_DRX	/* OPTIONAL */;
	long	*handoverUTRA_FDD_r16	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasAndMobParametersXDD_Diff_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_intraAndInterF_MeasAndReport_2;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_eventA_MeasAndReport_4;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_handoverInterF_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_handoverLTE_EPC_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_handoverLTE_5GC_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_sftd_MeasNR_Neigh_13;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_sftd_MeasNR_Neigh_DRX_15;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_handoverUTRA_FDD_r16_17;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MeasAndMobParametersXDD_Diff;
extern asn_SEQUENCE_specifics_t asn_SPC_MeasAndMobParametersXDD_Diff_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasAndMobParametersXDD_Diff_1[8];

#ifdef __cplusplus
}
#endif

#endif	/* _MeasAndMobParametersXDD_Diff_H_ */
#include "asn_internal.h"
