/*
 * Copyright 2020-2021 Telecom Paris
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-UE-Variables"
 * 	`asn1c -gen-PER -fcompound-names -findirect-choice -no-gen-example`
 */

#ifndef	_VarMeasConfig_H_
#define	_VarMeasConfig_H_


#include "asn_application.h"

/* Including external dependencies */
#include "RSRP-Range.h"
#include "constr_CHOICE.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum VarMeasConfig__s_MeasureConfig_PR {
	VarMeasConfig__s_MeasureConfig_PR_NOTHING,	/* No components present */
	VarMeasConfig__s_MeasureConfig_PR_ssb_RSRP,
	VarMeasConfig__s_MeasureConfig_PR_csi_RSRP
} VarMeasConfig__s_MeasureConfig_PR;

/* Forward declarations */
struct MeasIdToAddModList;
struct MeasObjectToAddModList;
struct ReportConfigToAddModList;
struct QuantityConfig;

/* VarMeasConfig */
typedef struct VarMeasConfig {
	struct MeasIdToAddModList	*measIdList;	/* OPTIONAL */
	struct MeasObjectToAddModList	*measObjectList;	/* OPTIONAL */
	struct ReportConfigToAddModList	*reportConfigList;	/* OPTIONAL */
	struct QuantityConfig	*quantityConfig;	/* OPTIONAL */
	struct VarMeasConfig__s_MeasureConfig {
		VarMeasConfig__s_MeasureConfig_PR present;
		union VarMeasConfig__s_MeasureConfig_u {
			RSRP_Range_t	 ssb_RSRP;
			RSRP_Range_t	 csi_RSRP;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *s_MeasureConfig;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} VarMeasConfig_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_VarMeasConfig;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MeasIdToAddModList.h"
#include "MeasObjectToAddModList.h"
#include "ReportConfigToAddModList.h"
#include "QuantityConfig.h"

#endif	/* _VarMeasConfig_H_ */
#include "asn_internal.h"
