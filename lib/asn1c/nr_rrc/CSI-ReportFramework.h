/*
 * Copyright 2020-2021 Telecom Paris
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	`asn1c -gen-PER -fcompound-names -findirect-choice -no-gen-example`
 */

#ifndef	_CSI_ReportFramework_H_
#define	_CSI_ReportFramework_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeInteger.h"
#include "NativeEnumerated.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC {
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n3	= 0,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n7	= 1,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n15	= 2,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n31	= 3,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n63	= 4,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n128	= 5
} e_CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC;

/* CSI-ReportFramework */
typedef struct CSI_ReportFramework {
	long	 maxNumberPeriodicCSI_PerBWP_ForCSI_Report;
	long	 maxNumberAperiodicCSI_PerBWP_ForCSI_Report;
	long	 maxNumberSemiPersistentCSI_PerBWP_ForCSI_Report;
	long	 maxNumberPeriodicCSI_PerBWP_ForBeamReport;
	long	 maxNumberAperiodicCSI_PerBWP_ForBeamReport;
	long	 maxNumberAperiodicCSI_triggeringStatePerCC;
	long	 maxNumberSemiPersistentCSI_PerBWP_ForBeamReport;
	long	 simultaneousCSI_ReportsPerCC;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CSI_ReportFramework_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberAperiodicCSI_triggeringStatePerCC_7;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_CSI_ReportFramework;
extern asn_SEQUENCE_specifics_t asn_SPC_CSI_ReportFramework_specs_1;
extern asn_TYPE_member_t asn_MBR_CSI_ReportFramework_1[8];

#ifdef __cplusplus
}
#endif

#endif	/* _CSI_ReportFramework_H_ */
#include "asn_internal.h"
