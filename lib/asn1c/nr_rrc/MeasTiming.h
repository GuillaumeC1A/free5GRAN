/*
 * Copyright 2020-2021 Telecom Paris
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	`asn1c -gen-PER -fcompound-names -findirect-choice -no-gen-example`
 */

#ifndef	_MeasTiming_H_
#define	_MeasTiming_H_


#include "asn_application.h"

/* Including external dependencies */
#include "ARFCN-ValueNR.h"
#include "SubcarrierSpacing.h"
#include "SSB-MTC.h"
#include "constr_SEQUENCE.h"
#include "PhysCellId.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct SS_RSSI_Measurement;
struct SSB_ToMeasure;

/* MeasTiming */
typedef struct MeasTiming {
	struct MeasTiming__frequencyAndTiming {
		ARFCN_ValueNR_t	 carrierFreq;
		SubcarrierSpacing_t	 ssbSubcarrierSpacing;
		SSB_MTC_t	 ssb_MeasurementTimingConfiguration;
		struct SS_RSSI_Measurement	*ss_RSSI_Measurement;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *frequencyAndTiming;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct MeasTiming__ext1 {
		struct SSB_ToMeasure	*ssb_ToMeasure_v1540;	/* OPTIONAL */
		PhysCellId_t	*physCellId;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasTiming_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MeasTiming;
extern asn_SEQUENCE_specifics_t asn_SPC_MeasTiming_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasTiming_1[2];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SS-RSSI-Measurement.h"
#include "SSB-ToMeasure.h"

#endif	/* _MeasTiming_H_ */
#include "asn_internal.h"
