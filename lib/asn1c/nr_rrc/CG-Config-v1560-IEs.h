/*
 * Copyright 2020-2021 Telecom Paris
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	`asn1c -gen-PER -fcompound-names -findirect-choice -no-gen-example`
 */

#ifndef	_CG_Config_v1560_IEs_H_
#define	_CG_Config_v1560_IEs_H_


#include "asn_application.h"

/* Including external dependencies */
#include "ARFCN-ValueEUTRA.h"
#include "OCTET_STRING.h"
#include "NativeEnumerated.h"
#include "EUTRA-PhysCellId.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CG_Config_v1560_IEs__needForGaps {
	CG_Config_v1560_IEs__needForGaps_true	= 0
} e_CG_Config_v1560_IEs__needForGaps;

/* Forward declarations */
struct CandidateServingFreqListEUTRA;
struct DRX_Config;

/* CG-Config-v1560-IEs */
typedef struct CG_Config_v1560_IEs {
	ARFCN_ValueEUTRA_t	*pSCellFrequencyEUTRA;	/* OPTIONAL */
	OCTET_STRING_t	*scg_CellGroupConfigEUTRA;	/* OPTIONAL */
	OCTET_STRING_t	*candidateCellInfoListSN_EUTRA;	/* OPTIONAL */
	struct CandidateServingFreqListEUTRA	*candidateServingFreqListEUTRA;	/* OPTIONAL */
	long	*needForGaps;	/* OPTIONAL */
	struct DRX_Config	*drx_ConfigSCG;	/* OPTIONAL */
	struct CG_Config_v1560_IEs__reportCGI_RequestEUTRA {
		struct CG_Config_v1560_IEs__reportCGI_RequestEUTRA__requestedCellInfoEUTRA {
			ARFCN_ValueEUTRA_t	 eutraFrequency;
			EUTRA_PhysCellId_t	 cellForWhichToReportCGI_EUTRA;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *requestedCellInfoEUTRA;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *reportCGI_RequestEUTRA;
	struct CG_Config_v1560_IEs__nonCriticalExtension {
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *nonCriticalExtension;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CG_Config_v1560_IEs_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_needForGaps_6;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_CG_Config_v1560_IEs;
extern asn_SEQUENCE_specifics_t asn_SPC_CG_Config_v1560_IEs_specs_1;
extern asn_TYPE_member_t asn_MBR_CG_Config_v1560_IEs_1[8];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "CandidateServingFreqListEUTRA.h"
#include "DRX-Config.h"

#endif	/* _CG_Config_v1560_IEs_H_ */
#include "asn_internal.h"
