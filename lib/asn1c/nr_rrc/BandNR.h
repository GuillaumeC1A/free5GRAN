/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "NR-RRC-Definitions.asn"
 * 	`asn1c -fcompound-names -no-gen-example -pdu=all`
 */

#ifndef	_BandNR_H_
#define	_BandNR_H_


#include "asn_application.h"

/* Including external dependencies */
#include "FreqBandIndicatorNR.h"
#include "BIT_STRING.h"
#include "NativeEnumerated.h"
#include "constr_SEQUENCE.h"
#include "constr_CHOICE.h"
#include "NativeInteger.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum BandNR__extendedCP {
	BandNR__extendedCP_supported	= 0
} e_BandNR__extendedCP;
typedef enum BandNR__multipleTCI {
	BandNR__multipleTCI_supported	= 0
} e_BandNR__multipleTCI;
typedef enum BandNR__bwp_WithoutRestriction {
	BandNR__bwp_WithoutRestriction_supported	= 0
} e_BandNR__bwp_WithoutRestriction;
typedef enum BandNR__bwp_SameNumerology {
	BandNR__bwp_SameNumerology_upto2	= 0,
	BandNR__bwp_SameNumerology_upto4	= 1
} e_BandNR__bwp_SameNumerology;
typedef enum BandNR__bwp_DiffNumerology {
	BandNR__bwp_DiffNumerology_upto4	= 0
} e_BandNR__bwp_DiffNumerology;
typedef enum BandNR__crossCarrierScheduling_SameSCS {
	BandNR__crossCarrierScheduling_SameSCS_supported	= 0
} e_BandNR__crossCarrierScheduling_SameSCS;
typedef enum BandNR__pdsch_256QAM_FR2 {
	BandNR__pdsch_256QAM_FR2_supported	= 0
} e_BandNR__pdsch_256QAM_FR2;
typedef enum BandNR__pusch_256QAM {
	BandNR__pusch_256QAM_supported	= 0
} e_BandNR__pusch_256QAM;
typedef enum BandNR__ue_PowerClass {
	BandNR__ue_PowerClass_pc1	= 0,
	BandNR__ue_PowerClass_pc2	= 1,
	BandNR__ue_PowerClass_pc3	= 2,
	BandNR__ue_PowerClass_pc4	= 3
} e_BandNR__ue_PowerClass;
typedef enum BandNR__rateMatchingLTE_CRS {
	BandNR__rateMatchingLTE_CRS_supported	= 0
} e_BandNR__rateMatchingLTE_CRS;
typedef enum BandNR__channelBWs_DL_PR {
	BandNR__channelBWs_DL_PR_NOTHING,	/* No components present */
	BandNR__channelBWs_DL_PR_fr1,
	BandNR__channelBWs_DL_PR_fr2
} BandNR__channelBWs_DL_PR;
typedef enum BandNR__channelBWs_UL_PR {
	BandNR__channelBWs_UL_PR_NOTHING,	/* No components present */
	BandNR__channelBWs_UL_PR_fr1,
	BandNR__channelBWs_UL_PR_fr2
} BandNR__channelBWs_UL_PR;
typedef enum BandNR__maxUplinkDutyCycle_PC2_FR1 {
	BandNR__maxUplinkDutyCycle_PC2_FR1_n60	= 0,
	BandNR__maxUplinkDutyCycle_PC2_FR1_n70	= 1,
	BandNR__maxUplinkDutyCycle_PC2_FR1_n80	= 2,
	BandNR__maxUplinkDutyCycle_PC2_FR1_n90	= 3,
	BandNR__maxUplinkDutyCycle_PC2_FR1_n100	= 4
} e_BandNR__maxUplinkDutyCycle_PC2_FR1;
typedef enum BandNR__pucch_SpatialRelInfoMAC_CE {
	BandNR__pucch_SpatialRelInfoMAC_CE_supported	= 0
} e_BandNR__pucch_SpatialRelInfoMAC_CE;
typedef enum BandNR__powerBoosting_pi2BPSK {
	BandNR__powerBoosting_pi2BPSK_supported	= 0
} e_BandNR__powerBoosting_pi2BPSK;
typedef enum BandNR__maxUplinkDutyCycle_FR2 {
	BandNR__maxUplinkDutyCycle_FR2_n15	= 0,
	BandNR__maxUplinkDutyCycle_FR2_n20	= 1,
	BandNR__maxUplinkDutyCycle_FR2_n25	= 2,
	BandNR__maxUplinkDutyCycle_FR2_n30	= 3,
	BandNR__maxUplinkDutyCycle_FR2_n40	= 4,
	BandNR__maxUplinkDutyCycle_FR2_n50	= 5,
	BandNR__maxUplinkDutyCycle_FR2_n60	= 6,
	BandNR__maxUplinkDutyCycle_FR2_n70	= 7,
	BandNR__maxUplinkDutyCycle_FR2_n80	= 8,
	BandNR__maxUplinkDutyCycle_FR2_n90	= 9,
	BandNR__maxUplinkDutyCycle_FR2_n100	= 10
} e_BandNR__maxUplinkDutyCycle_FR2;
typedef enum BandNR__channelBWs_DL_v1590_PR {
	BandNR__channelBWs_DL_v1590_PR_NOTHING,	/* No components present */
	BandNR__channelBWs_DL_v1590_PR_fr1,
	BandNR__channelBWs_DL_v1590_PR_fr2
} BandNR__channelBWs_DL_v1590_PR;
typedef enum BandNR__channelBWs_UL_v1590_PR {
	BandNR__channelBWs_UL_v1590_PR_NOTHING,	/* No components present */
	BandNR__channelBWs_UL_v1590_PR_fr1,
	BandNR__channelBWs_UL_v1590_PR_fr2
} BandNR__channelBWs_UL_v1590_PR;
typedef enum BandNR__cancelOverlappingPUSCH_r16 {
	BandNR__cancelOverlappingPUSCH_r16_supported	= 0
} e_BandNR__cancelOverlappingPUSCH_r16;
typedef enum BandNR__overlapRateMatchingEUTRA_CRS_r16 {
	BandNR__overlapRateMatchingEUTRA_CRS_r16_supported	= 0
} e_BandNR__overlapRateMatchingEUTRA_CRS_r16;
typedef enum BandNR__pdsch_MappingTypeB_Alt_r16 {
	BandNR__pdsch_MappingTypeB_Alt_r16_supported	= 0
} e_BandNR__pdsch_MappingTypeB_Alt_r16;
typedef enum BandNR__oneSlotPeriodicTRS_r16 {
	BandNR__oneSlotPeriodicTRS_r16_supported	= 0
} e_BandNR__oneSlotPeriodicTRS_r16;
typedef enum BandNR__simulSRS_MIMO_TransWithinBand_r16 {
	BandNR__simulSRS_MIMO_TransWithinBand_r16_n2	= 0
} e_BandNR__simulSRS_MIMO_TransWithinBand_r16;
typedef enum BandNR__channelBW_DL_IAB_r16_PR {
	BandNR__channelBW_DL_IAB_r16_PR_NOTHING,	/* No components present */
	BandNR__channelBW_DL_IAB_r16_PR_fr1_100mhz,
	BandNR__channelBW_DL_IAB_r16_PR_fr2_200mhz
} BandNR__channelBW_DL_IAB_r16_PR;
typedef enum BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_15kHz {
	BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_15kHz_supported	= 0
} e_BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_15kHz;
typedef enum BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_30kHz {
	BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_30kHz_supported	= 0
} e_BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_30kHz;
typedef enum BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_60kHz {
	BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_60kHz_supported	= 0
} e_BandNR__channelBW_DL_IAB_r16__fr1_100mhz__scs_60kHz;
typedef enum BandNR__channelBW_DL_IAB_r16__fr2_200mhz__scs_60kHz {
	BandNR__channelBW_DL_IAB_r16__fr2_200mhz__scs_60kHz_supported	= 0
} e_BandNR__channelBW_DL_IAB_r16__fr2_200mhz__scs_60kHz;
typedef enum BandNR__channelBW_DL_IAB_r16__fr2_200mhz__scs_120kHz {
	BandNR__channelBW_DL_IAB_r16__fr2_200mhz__scs_120kHz_supported	= 0
} e_BandNR__channelBW_DL_IAB_r16__fr2_200mhz__scs_120kHz;
typedef enum BandNR__channelBW_UL_IAB_r16_PR {
	BandNR__channelBW_UL_IAB_r16_PR_NOTHING,	/* No components present */
	BandNR__channelBW_UL_IAB_r16_PR_fr1_100mhz,
	BandNR__channelBW_UL_IAB_r16_PR_fr2_200mhz
} BandNR__channelBW_UL_IAB_r16_PR;
typedef enum BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_15kHz {
	BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_15kHz_supported	= 0
} e_BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_15kHz;
typedef enum BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_30kHz {
	BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_30kHz_supported	= 0
} e_BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_30kHz;
typedef enum BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_60kHz {
	BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_60kHz_supported	= 0
} e_BandNR__channelBW_UL_IAB_r16__fr1_100mhz__scs_60kHz;
typedef enum BandNR__channelBW_UL_IAB_r16__fr2_200mhz__scs_60kHz {
	BandNR__channelBW_UL_IAB_r16__fr2_200mhz__scs_60kHz_supported	= 0
} e_BandNR__channelBW_UL_IAB_r16__fr2_200mhz__scs_60kHz;
typedef enum BandNR__channelBW_UL_IAB_r16__fr2_200mhz__scs_120kHz {
	BandNR__channelBW_UL_IAB_r16__fr2_200mhz__scs_120kHz_supported	= 0
} e_BandNR__channelBW_UL_IAB_r16__fr2_200mhz__scs_120kHz;
typedef enum BandNR__rasterShift7dot5_IAB_r16 {
	BandNR__rasterShift7dot5_IAB_r16_supported	= 0
} e_BandNR__rasterShift7dot5_IAB_r16;
typedef enum BandNR__ue_PowerClass_v1610 {
	BandNR__ue_PowerClass_v1610_pc1dot5	= 0
} e_BandNR__ue_PowerClass_v1610;
typedef enum BandNR__condHandover_r16 {
	BandNR__condHandover_r16_supported	= 0
} e_BandNR__condHandover_r16;
typedef enum BandNR__condHandoverFailure_r16 {
	BandNR__condHandoverFailure_r16_supported	= 0
} e_BandNR__condHandoverFailure_r16;
typedef enum BandNR__condHandoverTwoTriggerEvents_r16 {
	BandNR__condHandoverTwoTriggerEvents_r16_supported	= 0
} e_BandNR__condHandoverTwoTriggerEvents_r16;
typedef enum BandNR__condPSCellChange_r16 {
	BandNR__condPSCellChange_r16_supported	= 0
} e_BandNR__condPSCellChange_r16;
typedef enum BandNR__condPSCellChangeTwoTriggerEvents_r16 {
	BandNR__condPSCellChangeTwoTriggerEvents_r16_supported	= 0
} e_BandNR__condPSCellChangeTwoTriggerEvents_r16;
typedef enum BandNR__mpr_PowerBoost_FR2_r16 {
	BandNR__mpr_PowerBoost_FR2_r16_supported	= 0
} e_BandNR__mpr_PowerBoost_FR2_r16;
typedef enum BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16 {
	BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16_n1	= 0,
	BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16_n2	= 1,
	BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16_n4	= 2,
	BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16_n8	= 3,
	BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16_n12	= 4
} e_BandNR__activeConfiguredGrant_r16__maxNumberConfigsPerBWP_r16;
typedef enum BandNR__jointReleaseConfiguredGrantType2_r16 {
	BandNR__jointReleaseConfiguredGrantType2_r16_supported	= 0
} e_BandNR__jointReleaseConfiguredGrantType2_r16;
typedef enum BandNR__jointReleaseSPS_r16 {
	BandNR__jointReleaseSPS_r16_supported	= 0
} e_BandNR__jointReleaseSPS_r16;
typedef enum BandNR__simulSRS_TransWithinBand_r16 {
	BandNR__simulSRS_TransWithinBand_r16_n2	= 0
} e_BandNR__simulSRS_TransWithinBand_r16;
typedef enum BandNR__trs_AdditionalBandwidth_r16 {
	BandNR__trs_AdditionalBandwidth_r16_trs_AddBW_Set1	= 0,
	BandNR__trs_AdditionalBandwidth_r16_trs_AddBW_Set2	= 1
} e_BandNR__trs_AdditionalBandwidth_r16;
typedef enum BandNR__handoverIntraF_IAB_r16 {
	BandNR__handoverIntraF_IAB_r16_supported	= 0
} e_BandNR__handoverIntraF_IAB_r16;

/* Forward declarations */
struct MIMO_ParametersPerBand;
struct SharedSpectrumChAccessParamsPerBand_r16;
struct OLPC_SRS_Pos_r16;
struct SpatialRelationsSRS_Pos_r16;

/* BandNR */
typedef struct BandNR {
	FreqBandIndicatorNR_t	 bandNR;
	BIT_STRING_t	*modifiedMPR_Behaviour	/* OPTIONAL */;
	struct MIMO_ParametersPerBand	*mimo_ParametersPerBand	/* OPTIONAL */;
	long	*extendedCP	/* OPTIONAL */;
	long	*multipleTCI	/* OPTIONAL */;
	long	*bwp_WithoutRestriction	/* OPTIONAL */;
	long	*bwp_SameNumerology	/* OPTIONAL */;
	long	*bwp_DiffNumerology	/* OPTIONAL */;
	long	*crossCarrierScheduling_SameSCS	/* OPTIONAL */;
	long	*pdsch_256QAM_FR2	/* OPTIONAL */;
	long	*pusch_256QAM	/* OPTIONAL */;
	long	*ue_PowerClass	/* OPTIONAL */;
	long	*rateMatchingLTE_CRS	/* OPTIONAL */;
	struct BandNR__channelBWs_DL {
		BandNR__channelBWs_DL_PR present;
		union BandNR__channelBWs_DL_u {
			struct BandNR__channelBWs_DL__fr1 {
				BIT_STRING_t	*scs_15kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_30kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr1;
			struct BandNR__channelBWs_DL__fr2 {
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_120kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr2;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBWs_DL;
	struct BandNR__channelBWs_UL {
		BandNR__channelBWs_UL_PR present;
		union BandNR__channelBWs_UL_u {
			struct BandNR__channelBWs_UL__fr1 {
				BIT_STRING_t	*scs_15kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_30kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr1;
			struct BandNR__channelBWs_UL__fr2 {
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_120kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr2;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBWs_UL;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	long	*maxUplinkDutyCycle_PC2_FR1	/* OPTIONAL */;
	long	*pucch_SpatialRelInfoMAC_CE	/* OPTIONAL */;
	long	*powerBoosting_pi2BPSK	/* OPTIONAL */;
	long	*maxUplinkDutyCycle_FR2	/* OPTIONAL */;
	struct BandNR__channelBWs_DL_v1590 {
		BandNR__channelBWs_DL_v1590_PR present;
		union BandNR__channelBWs_DL_v1590_u {
			struct BandNR__channelBWs_DL_v1590__fr1 {
				BIT_STRING_t	*scs_15kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_30kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr1;
			struct BandNR__channelBWs_DL_v1590__fr2 {
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_120kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr2;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBWs_DL_v1590;
	struct BandNR__channelBWs_UL_v1590 {
		BandNR__channelBWs_UL_v1590_PR present;
		union BandNR__channelBWs_UL_v1590_u {
			struct BandNR__channelBWs_UL_v1590__fr1 {
				BIT_STRING_t	*scs_15kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_30kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr1;
			struct BandNR__channelBWs_UL_v1590__fr2 {
				BIT_STRING_t	*scs_60kHz	/* OPTIONAL */;
				BIT_STRING_t	*scs_120kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr2;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBWs_UL_v1590;
	BIT_STRING_t	*asymmetricBandwidthCombinationSet	/* OPTIONAL */;
	struct SharedSpectrumChAccessParamsPerBand_r16	*sharedSpectrumChAccessParamsPerBand_r16	/* OPTIONAL */;
	long	*cancelOverlappingPUSCH_r16	/* OPTIONAL */;
	struct BandNR__multipleRateMatchingEUTRA_CRS_r16 {
		long	 maxNumberPatterns_r16;
		long	 maxNumberNon_OverlapPatterns_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *multipleRateMatchingEUTRA_CRS_r16;
	long	*overlapRateMatchingEUTRA_CRS_r16	/* OPTIONAL */;
	long	*pdsch_MappingTypeB_Alt_r16	/* OPTIONAL */;
	long	*oneSlotPeriodicTRS_r16	/* OPTIONAL */;
	struct OLPC_SRS_Pos_r16	*olpc_SRS_Pos_r16	/* OPTIONAL */;
	struct SpatialRelationsSRS_Pos_r16	*spatialRelationsSRS_Pos_r16	/* OPTIONAL */;
	long	*simulSRS_MIMO_TransWithinBand_r16	/* OPTIONAL */;
	struct BandNR__channelBW_DL_IAB_r16 {
		BandNR__channelBW_DL_IAB_r16_PR present;
		union BandNR__channelBW_DL_IAB_r16_u {
			struct BandNR__channelBW_DL_IAB_r16__fr1_100mhz {
				long	*scs_15kHz	/* OPTIONAL */;
				long	*scs_30kHz	/* OPTIONAL */;
				long	*scs_60kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr1_100mhz;
			struct BandNR__channelBW_DL_IAB_r16__fr2_200mhz {
				long	*scs_60kHz	/* OPTIONAL */;
				long	*scs_120kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr2_200mhz;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBW_DL_IAB_r16;
	struct BandNR__channelBW_UL_IAB_r16 {
		BandNR__channelBW_UL_IAB_r16_PR present;
		union BandNR__channelBW_UL_IAB_r16_u {
			struct BandNR__channelBW_UL_IAB_r16__fr1_100mhz {
				long	*scs_15kHz	/* OPTIONAL */;
				long	*scs_30kHz	/* OPTIONAL */;
				long	*scs_60kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr1_100mhz;
			struct BandNR__channelBW_UL_IAB_r16__fr2_200mhz {
				long	*scs_60kHz	/* OPTIONAL */;
				long	*scs_120kHz	/* OPTIONAL */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fr2_200mhz;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBW_UL_IAB_r16;
	long	*rasterShift7dot5_IAB_r16	/* OPTIONAL */;
	long	*ue_PowerClass_v1610	/* OPTIONAL */;
	long	*condHandover_r16	/* OPTIONAL */;
	long	*condHandoverFailure_r16	/* OPTIONAL */;
	long	*condHandoverTwoTriggerEvents_r16	/* OPTIONAL */;
	long	*condPSCellChange_r16	/* OPTIONAL */;
	long	*condPSCellChangeTwoTriggerEvents_r16	/* OPTIONAL */;
	long	*mpr_PowerBoost_FR2_r16	/* OPTIONAL */;
	struct BandNR__activeConfiguredGrant_r16 {
		long	 maxNumberConfigsPerBWP_r16;
		long	 maxNumberConfigsAllCC_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *activeConfiguredGrant_r16;
	long	*jointReleaseConfiguredGrantType2_r16	/* OPTIONAL */;
	struct BandNR__sps_r16 {
		long	 maxNumberConfigsPerBWP_r16;
		long	 maxNumberConfigsAllCC_r16;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *sps_r16;
	long	*jointReleaseSPS_r16	/* OPTIONAL */;
	long	*simulSRS_TransWithinBand_r16	/* OPTIONAL */;
	long	*trs_AdditionalBandwidth_r16	/* OPTIONAL */;
	long	*handoverIntraF_IAB_r16	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} BandNR_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_extendedCP_5;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_multipleTCI_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bwp_WithoutRestriction_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bwp_SameNumerology_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bwp_DiffNumerology_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_crossCarrierScheduling_SameSCS_16;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pdsch_256QAM_FR2_18;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pusch_256QAM_20;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ue_PowerClass_22;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_rateMatchingLTE_CRS_27;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxUplinkDutyCycle_PC2_FR1_46;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pucch_SpatialRelInfoMAC_CE_52;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_powerBoosting_pi2BPSK_54;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxUplinkDutyCycle_FR2_56;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_cancelOverlappingPUSCH_r16_86;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_overlapRateMatchingEUTRA_CRS_r16_91;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pdsch_MappingTypeB_Alt_r16_93;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_oneSlotPeriodicTRS_r16_95;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simulSRS_MIMO_TransWithinBand_r16_99;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_15kHz_103;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_30kHz_105;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_107;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_110;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_112;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_15kHz_116;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_30kHz_118;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_120;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_60kHz_123;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_scs_120kHz_125;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_rasterShift7dot5_IAB_r16_127;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ue_PowerClass_v1610_129;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_condHandover_r16_131;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_condHandoverFailure_r16_133;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_condHandoverTwoTriggerEvents_r16_135;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_condPSCellChange_r16_137;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_condPSCellChangeTwoTriggerEvents_r16_139;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_mpr_PowerBoost_FR2_r16_141;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberConfigsPerBWP_r16_144;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_jointReleaseConfiguredGrantType2_r16_151;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_jointReleaseSPS_r16_156;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_simulSRS_TransWithinBand_r16_158;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_trs_AdditionalBandwidth_r16_160;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_handoverIntraF_IAB_r16_163;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_BandNR;
extern asn_SEQUENCE_specifics_t asn_SPC_BandNR_specs_1;
extern asn_TYPE_member_t asn_MBR_BandNR_1[48];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "MIMO-ParametersPerBand.h"
#include "SharedSpectrumChAccessParamsPerBand-r16.h"
#include "OLPC-SRS-Pos-r16.h"
#include "SpatialRelationsSRS-Pos-r16.h"

#endif	/* _BandNR_H_ */
#include "asn_internal.h"
